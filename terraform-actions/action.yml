name: "terraform action"
description: "A composite action wrapper around terraform"
inputs:
  command:
    description: "The terraform command to run"
    required: true
  header_message:
    description: "Message to add before the terraform output that is posted to a PR. (Must be a single line string)"
    required: false
    default: ""
  working_directory:
    description: "The directory to run all the commands in"
    required: false
    default: "."
outputs:
  command-output:
    description: "The Terraform command output"
    value: ${{ steps.main.outputs.command-output }}
  plan-has-changes:
    description: "Whether the plan contained changes"
    value: ${{ steps.main.outputs.plan-has-changes }}
runs:
  using: "composite"
  steps:
    - name: terraform
      shell: bash
      id: main
      working-directory: ${{ inputs.working_directory }}
      run: ${{ github.action_path }}/main.sh "${{ inputs.command }}" "${{ inputs.working_directory }}" "${{ inputs.header_message }}"
    - name: Comment output on PR
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ !cancelled() && github.event_name == 'pull_request' && && inputs.command-output != '' && steps.main.outputs.plan-has-changes != 'false' }}
      with:
        recreate: true
        header: terraform ${{ inputs.working_directory }}
        message: |
          **`terraform ${{ inputs.command }}` ${{ steps.main.outputs.command-outcome }} for `${{ inputs.working_directory }}`**

          <details>
            <summary>View output</summary>

            ```
            ${{ steps.main.outputs.command-output }}
            ```
          </details>

          Run via [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
