name: helm-push-S3
description: "A composite action wrapper around pushing helm charts to S3"
inputs:
  aws-access-key-id:
    description: "AWS Access Key ID for the S3 bucket"
    required: true
    default: ""
  aws-secret-access-key:
    description: "AWS Secret Access Key for the S3 bucket"
    required: true
    default: ""
  chart-version:
    description: "Version charts to package"
    required: true
    default: ""
  chart-path:
    description: "Path to the helm charts to package"
    required: true
    default: ""
  github-sha:
    description: "Github SHA of the commit used to trigger the build"
    required: true
    default: ""
  repo-location:
    description: Path to the S3 helm repo
    required: true
    default: ""
  repo-region: 
    description: Region of the S3 helm repo
    required: true
    default: ""
runs:
  using: composite
  steps:
    - name: Setup Helm
      uses: azure/setup-helm@v4
      env:
        HELM_VERSION: 3.12.3
        HELM_REPO: helm
      with:
        version: ${{ env.HELM_VERSION }}
    - name: Install Helm S3 plugin 
      shell: bash
      run: |
        if ! command helm s3 2>&1 >/dev/null
        then
          helm plugin install https://github.com/hypnoglow/helm-s3.git
        else
          echo "Helm S3 Plugin already installed"
        fi
    - name: Package chart
      shell: bash
      run: |
        helm package ${{ inputs.chart-path }} --version ${{ inputs.chart-version }} --destination /dev/shm/chart
        helm package ${{ inputs.chart-path }} --version ${{ inputs.chart-version }}-${{ inputs.github-sha }} --destination /dev/shm/chart
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.repo-region }}
    - name: Push Chart to S3
      shell: bash
      run: |
        echo "HELM_REPO=helm-$(date +%s)" >> $GITHUB_ENV
        helm s3 init --ignore-if-exists ${{ inputs.repo-location }}
        helm repo add ${{ env.HELM_VERSION}} ${{ inputs.repo-location }}
        ls "/dev/shm/chart/" | xargs -I {} helm s3 push --ignore-if-exists "/dev/shm/chart/{}" ${{ env.HELM_VERSION}}
